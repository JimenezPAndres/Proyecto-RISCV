 module PC(input reset,input JALR,input PCSrc,input clock,input [31:0] ALU_result ,output reg [31:0] pc_out);
    
 wire [31:0] pc_in;
 wire PCSrc_;
 wire [1:0] mux12;
 assign mux12[1] = PCSrc;
 assign mux12[0] = JALR;
    
  always @*
      case (mux12)
         2'b00: PCSrc_ = 0;
         2'b01: PCSrc_ = 1;
         2'b10 PCSrc_ = 0;
         2'b11: PCSrc_ = 0;
      endcase
				
 PC_MUX PC_MUX2( PCSrc_,reset, clock,pc_out, ALU_result,pc_in);
 

 
always@(posedge reset or posedge clock)
    if(reset)begin
        pc_out<=0;
    end else begin
        if(PCSrc==0)
            pc_out<=pc_in;
        else
            pc_out<=pc_out; // si se requiere hacer jump
            end
  


endmodule
